'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Layout = require('../../components/Layout');

var _Layout2 = _interopRequireDefault(_Layout);

var _hospital = require('../../ethereum/hospital');

var _hospital2 = _interopRequireDefault(_hospital);

var _web = require('../../ethereum/web3');

var _web2 = _interopRequireDefault(_web);

var _semanticUiReact = require('semantic-ui-react');

var _contributeForm = require('../../components/contributeForm');

var _contributeForm2 = _interopRequireDefault(_contributeForm);

var _routes = require('../../routes');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _jsxFileName = 'C:\\Users\\karan karmakar\\deCovid\\pages\\hospitals\\details.js?entry';


var hospitalDetails = function (_React$Component) {
    (0, _inherits3.default)(hospitalDetails, _React$Component);

    function hospitalDetails() {
        (0, _classCallCheck3.default)(this, hospitalDetails);

        return (0, _possibleConstructorReturn3.default)(this, (hospitalDetails.__proto__ || (0, _getPrototypeOf2.default)(hospitalDetails)).apply(this, arguments));
    }

    (0, _createClass3.default)(hospitalDetails, [{
        key: 'renderCards',
        value: function renderCards() {
            var _props = this.props,
                manager = _props.manager,
                name = _props.name,
                no = _props.no,
                location = _props.location,
                contributersCount = _props.contributersCount,
                balance = _props.balance;

            var items = [{
                header: name,
                meta: "Name Of The Hospital",
                description: "one of the prestigious hospital of the city "
            }, {
                header: manager,
                meta: "Manager Of The Hospital",
                description: " he/she can only withdraw the donation for the wel being of covid 19 positive paitients",
                style: { overflowWrap: 'break-word' }
            }, {
                header: no,
                meta: "Number Of Covid Paitients",
                description: " now its spreading very fast "
            }, {
                header: location,
                meta: "Address Of The Hospital",
                description: "bhubaneswar"
            }, {
                header: contributersCount,
                meta: "Number Of Helpers",
                description: "be the first to help "

            }, {
                header: balance,
                meta: "funds",
                description: "totals funds available"
            }];
            return _react2.default.createElement(_semanticUiReact.Card.Group, { items: items, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 70
                }
            });
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_Layout2.default, {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 75
                }
            }, _react2.default.createElement('h3', {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 76
                }
            }, ' Hospital Details '), _react2.default.createElement(_semanticUiReact.Grid, {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 77
                }
            }, _react2.default.createElement(_semanticUiReact.Grid.Row, {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 78
                }
            }, _react2.default.createElement(_semanticUiReact.Grid.Column, { width: 10, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 79
                }
            }, this.renderCards()), _react2.default.createElement(_semanticUiReact.Grid.Column, { width: 6, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 80
                }
            }, _react2.default.createElement(_contributeForm2.default, { address: this.props.address, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 81
                }
            }))), _react2.default.createElement(_semanticUiReact.Grid.Row, {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 84
                }
            }, _react2.default.createElement(_semanticUiReact.Grid.Column, { width: 10, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 85
                }
            }, _react2.default.createElement(_routes.Link, { route: '/hospitals/' + this.props.address + '/withdraw', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 86
                }
            }, _react2.default.createElement('a', {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 87
                }
            }, ' ', _react2.default.createElement(_semanticUiReact.Button, {
                style: { marginTop: '30px' },
                content: 'Withdraw Donation',
                icon: 'key',
                color: 'grey',
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 87
                }
            }))), _react2.default.createElement(_routes.Link, { route: '/hospitals/' + this.props.address + '/contributerList', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 95
                }
            }, _react2.default.createElement('a', {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 96
                }
            }, _react2.default.createElement(_semanticUiReact.Button, {
                style: { marginTop: '30px', marginLeft: "30px" },
                content: 'view contributer list',
                icon: 'list ul',
                color: 'grey', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 96
                }
            }))))), _react2.default.createElement(_semanticUiReact.Grid.Row, {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 105
                }
            }, _react2.default.createElement(_semanticUiReact.Grid.Column, { width: 10, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 106
                }
            }, _react2.default.createElement(_routes.Link, { route: '/hospitals/' + this.props.address + '/requests/create', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 107
                }
            }, _react2.default.createElement('a', {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 108
                }
            }, ' ', _react2.default.createElement(_semanticUiReact.Button, {

                content: 'Send Fund Request ',
                icon: 'key',
                color: 'grey',
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 108
                }
            }))), _react2.default.createElement(_routes.Link, { route: '/hospitals/' + this.props.address + '/requests', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 116
                }
            }, _react2.default.createElement('a', {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 117
                }
            }, _react2.default.createElement(_semanticUiReact.Button, {
                style: { marginLeft: "30px" },
                content: 'view Request List',
                icon: 'list ul',
                color: 'grey', __source: {
                    fileName: _jsxFileName,
                    lineNumber: 117
                }
            })))))));
        }
    }], [{
        key: 'getInitialProps',
        value: function () {
            var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(props) {
                var hospital, summary;
                return _regenerator2.default.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                hospital = (0, _hospital2.default)(props.query.address);
                                _context.next = 3;
                                return hospital.methods.getDetails().call();

                            case 3:
                                summary = _context.sent;
                                return _context.abrupt('return', {
                                    address: props.query.address,
                                    manager: summary[0],
                                    name: summary[1],
                                    no: summary[2],
                                    location: summary[3],
                                    contributersCount: summary[4],
                                    balance: summary[5]
                                });

                            case 5:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function getInitialProps(_x) {
                return _ref.apply(this, arguments);
            }

            return getInitialProps;
        }()
    }]);

    return hospitalDetails;
}(_react2.default.Component);

exports.default = hospitalDetails;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,