'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Layout = require('../components/Layout');

var _Layout2 = _interopRequireDefault(_Layout);

var _semanticUiReact = require('semantic-ui-react');

var _routes = require('../routes');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _jsxFileName = 'C:\\Users\\karan karmakar\\deCovid\\pages\\index.js?entry';


var homePage = function (_React$Component) {
  (0, _inherits3.default)(homePage, _React$Component);

  function homePage() {
    (0, _classCallCheck3.default)(this, homePage);

    return (0, _possibleConstructorReturn3.default)(this, (homePage.__proto__ || (0, _getPrototypeOf2.default)(homePage)).apply(this, arguments));
  }

  (0, _createClass3.default)(homePage, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement('div', {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 11
        }
      }, _react2.default.createElement(_Layout2.default, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 13
        }
      }, _react2.default.createElement('div', {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 14
        }
      }, _react2.default.createElement('h1', {
        style: {
          textAlign: "center",
          color: "dimgrey",
          fontSize: "50px",
          marginTop: "17%"
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 15
        }
      }, 'DeCovid Charity'), _react2.default.createElement('h3', {
        style: {
          textAlign: "center",
          color: "darkgrey"
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 23
        }
      }, 'A Decentralised Transparent Charitable Trust For Covid Paitients'), _react2.default.createElement(_routes.Link, { route: '/validHospitalList', __source: {
          fileName: _jsxFileName,
          lineNumber: 29
        }
      }, _react2.default.createElement('a', {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 30
        }
      }, _react2.default.createElement(_semanticUiReact.Button, {
        style: { width: "300px",
          marginTop: "40px",
          marginLeft: "200px"
        },
        basic: true, color: 'grey', __source: {
          fileName: _jsxFileName,
          lineNumber: 30
        }
      }, 'Be A Helper'))), _react2.default.createElement(_routes.Link, { route: '/hospitals/register', __source: {
          fileName: _jsxFileName,
          lineNumber: 37
        }
      }, _react2.default.createElement('a', {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 38
        }
      }, '   ', _react2.default.createElement(_semanticUiReact.Button, {
        style: { width: "300px",
          marginTop: "40px",
          marginLeft: "100px"
        },
        basic: true, color: 'grey', __source: {
          fileName: _jsxFileName,
          lineNumber: 38
        }
      }, 'Register As Hospital'))))));
    }
  }]);

  return homePage;
}(_react2.default.Component);

exports.default = homePage;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVua25vd24iXSwibmFtZXMiOlsiX2pzeEZpbGVOYW1lIiwiaG9tZVBhZ2UiLCJfUmVhY3QkQ29tcG9uZW50IiwiX19wcm90b19fIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJrZXkiLCJ2YWx1ZSIsInJlbmRlciIsImNyZWF0ZUVsZW1lbnQiLCJfX3NvdXJjZSIsImZpbGVOYW1lIiwibGluZU51bWJlciIsInN0eWxlIiwidGV4dEFsaWduIiwiY29sb3IiLCJmb250U2l6ZSIsIm1hcmdpblRvcCIsInJvdXRlIiwid2lkdGgiLCJtYXJnaW5MZWZ0IiwiYmFzaWMiLCJDb21wb25lbnQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFFQTs7OztBQUNBOzs7O0FBQ0E7O0FBQ0E7Ozs7QUFKQSxJQUFJQSxlQUFlLDJEQUFuQjs7O0FBTUEsSUFBSUMsV0FBVyxVQUFVQyxnQkFBVixFQUE0QjtBQUN6QywwQkFBVUQsUUFBVixFQUFvQkMsZ0JBQXBCOztBQUVBLFdBQVNELFFBQVQsR0FBb0I7QUFDbEIsa0NBQWdCLElBQWhCLEVBQXNCQSxRQUF0Qjs7QUFFQSxXQUFPLHlDQUEyQixJQUEzQixFQUFpQyxDQUFDQSxTQUFTRSxTQUFULElBQXNCLDhCQUF1QkYsUUFBdkIsQ0FBdkIsRUFBeURHLEtBQXpELENBQStELElBQS9ELEVBQXFFQyxTQUFyRSxDQUFqQyxDQUFQO0FBQ0Q7O0FBRUQsNkJBQWFKLFFBQWIsRUFBdUIsQ0FBQztBQUN0QkssU0FBSyxRQURpQjtBQUV0QkMsV0FBTyxTQUFTQyxNQUFULEdBQWtCO0FBQ3ZCLGFBQU8sZ0JBQU1DLGFBQU4sQ0FDTCxLQURLLEVBRUw7QUFDRUMsa0JBQVU7QUFDUkMsb0JBQVVYLFlBREY7QUFFUlksc0JBQVk7QUFGSjtBQURaLE9BRkssRUFRTCxnQkFBTUgsYUFBTixtQkFFRTtBQUNFQyxrQkFBVTtBQUNSQyxvQkFBVVgsWUFERjtBQUVSWSxzQkFBWTtBQUZKO0FBRFosT0FGRixFQVFFLGdCQUFNSCxhQUFOLENBQ0UsS0FERixFQUVFO0FBQ0VDLGtCQUFVO0FBQ1JDLG9CQUFVWCxZQURGO0FBRVJZLHNCQUFZO0FBRko7QUFEWixPQUZGLEVBUUUsZ0JBQU1ILGFBQU4sQ0FDRSxJQURGLEVBRUU7QUFDRUksZUFBTztBQUNMQyxxQkFBVyxRQUROO0FBRUxDLGlCQUFPLFNBRkY7QUFHTEMsb0JBQVUsTUFITDtBQUlMQyxxQkFBVztBQUpOLFNBRFQ7QUFPRVAsa0JBQVU7QUFDUkMsb0JBQVVYLFlBREY7QUFFUlksc0JBQVk7QUFGSjtBQVBaLE9BRkYsRUFjRSxpQkFkRixDQVJGLEVBd0JFLGdCQUFNSCxhQUFOLENBQ0UsSUFERixFQUVFO0FBQ0VJLGVBQU87QUFDTEMscUJBQVcsUUFETjtBQUVMQyxpQkFBTztBQUZGLFNBRFQ7QUFLRUwsa0JBQVU7QUFDUkMsb0JBQVVYLFlBREY7QUFFUlksc0JBQVk7QUFGSjtBQUxaLE9BRkYsRUFZRSxrRUFaRixDQXhCRixFQXNDRSxnQkFBTUgsYUFBTixlQUVFLEVBQUVTLE9BQU8sb0JBQVQsRUFBK0JSLFVBQVU7QUFDckNDLG9CQUFVWCxZQUQyQjtBQUVyQ1ksc0JBQVk7QUFGeUI7QUFBekMsT0FGRixFQU9FLGdCQUFNSCxhQUFOLENBQ0UsR0FERixFQUVFO0FBQ0VDLGtCQUFVO0FBQ1JDLG9CQUFVWCxZQURGO0FBRVJZLHNCQUFZO0FBRko7QUFEWixPQUZGLEVBUUUsZ0JBQU1ILGFBQU4sMEJBRUU7QUFDRUksZUFBTyxFQUFFTSxPQUFPLE9BQVQ7QUFDTEYscUJBQVcsTUFETjtBQUVMRyxzQkFBWTtBQUZQLFNBRFQ7QUFLRUMsZUFBTyxJQUxULEVBS2VOLE9BQU8sTUFMdEIsRUFLOEJMLFVBQVU7QUFDcENDLG9CQUFVWCxZQUQwQjtBQUVwQ1ksc0JBQVk7QUFGd0I7QUFMeEMsT0FGRixFQVlFLGFBWkYsQ0FSRixDQVBGLENBdENGLEVBcUVFLGdCQUFNSCxhQUFOLGVBRUUsRUFBRVMsT0FBTyxxQkFBVCxFQUFnQ1IsVUFBVTtBQUN0Q0Msb0JBQVVYLFlBRDRCO0FBRXRDWSxzQkFBWTtBQUYwQjtBQUExQyxPQUZGLEVBT0UsZ0JBQU1ILGFBQU4sQ0FDRSxHQURGLEVBRUU7QUFDRUMsa0JBQVU7QUFDUkMsb0JBQVVYLFlBREY7QUFFUlksc0JBQVk7QUFGSjtBQURaLE9BRkYsRUFRRSxLQVJGLEVBU0UsZ0JBQU1ILGFBQU4sMEJBRUU7QUFDRUksZUFBTyxFQUFFTSxPQUFPLE9BQVQ7QUFDTEYscUJBQVcsTUFETjtBQUVMRyxzQkFBWTtBQUZQLFNBRFQ7QUFLRUMsZUFBTyxJQUxULEVBS2VOLE9BQU8sTUFMdEIsRUFLOEJMLFVBQVU7QUFDcENDLG9CQUFVWCxZQUQwQjtBQUVwQ1ksc0JBQVk7QUFGd0I7QUFMeEMsT0FGRixFQVlFLHNCQVpGLENBVEYsQ0FQRixDQXJFRixDQVJGLENBUkssQ0FBUDtBQXdIRDtBQTNIcUIsR0FBRCxDQUF2Qjs7QUE4SEEsU0FBT1gsUUFBUDtBQUNELENBeEljLENBd0liLGdCQUFNcUIsU0F4SU8sQ0FBZjs7a0JBMEllckIsUSIsImZpbGUiOiJ1bmtub3duIn0=